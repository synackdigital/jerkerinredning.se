{"version":3,"sources":["../assets/scripts/instafeed.js","../bower_components/bootstrap/js/transition.js","../bower_components/bootstrap/js/collapse.js","../bower_components/bootstrap/js/tooltip.js","../bower_components/instafeed.js/instafeed.js","../assets/scripts/main.js","../assets/scripts/tableflip.js"],"names":["initializeInstafeed","$canvas","uniqid","Date","now","attr","$canvas_data","data","instafeed","Instafeed","clientId","PHPVAR","instagram_client_id","userId","parseInt","instagram_user_id","accessToken","instagram_access_token","target","get","limit","resolution","links","template","before","success","after","error","run","$","transitionEnd","el","document","createElement","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","name","undefined","style","end","fn","emulateTransitionEnd","duration","called","$el","this","one","callback","trigger","support","setTimeout","event","special","bsTransitionEnd","bindType","delegateType","handle","e","is","handleObj","handler","apply","arguments","jQuery","getTargetFromTrigger","$trigger","href","replace","Plugin","option","each","$this","options","extend","Collapse","DEFAULTS","toggle","element","$element","filter","id","transitioning","parent","$parent","getParent","addAriaAndCollapsedClass","VERSION","TRANSITION_DURATION","prototype","dimension","hasWidth","hasClass","show","activesData","actives","children","length","startEvent","Event","isDefaultPrevented","call","removeClass","addClass","complete","scrollSize","camelCase","join","proxy","hide","offsetHeight","find","i","isOpen","toggleClass","old","collapse","Constructor","noConflict","on","preventDefault","$target","Tooltip","type","enabled","timeout","hoverState","init","animation","placement","selector","title","delay","html","container","viewport","padding","getOptions","$viewport","triggers","split","eventIn","eventOut","enter","leave","_options","fixTitle","getDefaults","getDelegateOptions","defaults","key","value","obj","self","constructor","currentTarget","$tip","clearTimeout","hasContent","inDom","contains","ownerDocument","documentElement","that","tip","tipId","getUID","setContent","autoToken","autoPlace","test","detach","css","top","left","display","appendTo","insertAfter","pos","getPosition","actualWidth","offsetWidth","actualHeight","orgPlacement","$container","containerDim","bottom","right","width","calculatedOffset","getCalculatedOffset","applyPlacement","prevHoverState","offset","height","marginTop","marginLeft","isNaN","setOffset","using","props","Math","round","delta","getViewportAdjustedDelta","isVertical","arrowDelta","arrowOffsetPosition","replaceArrow","isHorizontal","arrow","getTitle","removeAttr","$e","isBody","tagName","elRect","getBoundingClientRect","elOffset","scroll","scrollTop","body","outerDims","window","viewportPadding","viewportDimensions","topEdgeOffset","bottomEdgeOffset","leftEdgeOffset","rightEdgeOffset","o","prefix","random","getElementById","$arrow","enable","disable","toggleEnabled","destroy","off","removeData","tooltip","root","params","context","sortBy","mock","useHttp","unique","_genKey","hasNext","nextUrl","next","url","header","instanceName","script","Error","src","_buildUrl","getElementsByTagName","appendChild","parse","response","anchor","fragment","htmlString","image","imageString","imageUrl","images","img","imgUrl","node","reverse","sortSettings","tmpEl","_i","_j","_k","_len","_len1","_len2","_ref","meta","code","error_message","pagination","next_url","sort","_sortBy","slice","createDocumentFragment","_filter","_makeTemplate","model","link","caption","_getObjectProperty","likes","count","comments","location","innerHTML","childNodes","removeChild","base","endpoint","final","locationId","S4","toString","substring","output","pattern","varName","varValue","match","object","property","piece","pieces","shift","sorter","a","b","valueA","valueB","bind","filteredImages","_fn","push","exports","Sage","common","finalize","home","bord","UTIL","fire","func","funcname","args","namespace","loadEvents","className","classnm","ready","NAMESPACE","$modelsContainer","$modelsSlides","$modelsNextControl","$modelsPrevControl","$modelLabel","$widthControl","$widthLabel","$lengthControl","$lengthLabel","$materialsContainer","$finishesContainer","$customerContainer","$thankyouContainer","$orderControl","index","base_price","max_length","max_width","min_length","min_width","sqm_price","models","material","price_modifier","parseFloat","materials","finish","finishes","version","console","log","setModel","setWidth","setLength","setMaterial","setFinish","sendOrder","refresh","keyword","indexOf","order","getModel","getMaterial","verifyMaterialAvailability","disable_for_model","getFinish","getWidth","getLength","setPrice","price","getSqm","roundPrice","ceil","getPrice","getPriceString","priceArray","str","currency","position","outerHeight","getOrderJSON","JSON","stringify","customerJSON","customerName","val","customerEmail","customerPhone","email","phone","orderMessage","getJSON","message","subject","from_email","from_name","to","text","json","textStatus","method"],"mappings":"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","file":"main.js","sourcesContent":["function initializeInstafeed($canvas) {\n\n  // Assign a unique ID for this container\n  uniqid = Date.now();\n  $canvas.attr('id', 'instafeed-canvas-'+uniqid);\n\n  // Retrieve data from the data-instafeed attribute\n  $canvas_data = $canvas.data('instafeed');\n\n  // Create the Instafeed\n  var instafeed = new Instafeed({\n\n    // Fetch credentials from PHPVAR\n    clientId: PHPVAR.instagram_client_id,\n    userId: parseInt(PHPVAR.instagram_user_id),\n    accessToken: PHPVAR.instagram_access_token,\n\n    // Create attribues\n    target: $canvas.attr('id'),\n    get: $canvas_data.get,\n    limit: parseInt($canvas_data.limit),\n    resolution: $canvas_data.resolution,\n    links: $canvas_data.links,\n\n    // HTML Template\n    template: '<div class=\"col-xs-12 col-sm-4 col-lg-3\"><div class=\"thumbnail\"><a href=\"{{link}}\"><img src=\"{{image}}\" alt=\"{{caption}}\"></a></div></div>',\n\n    // Handle callbacks\n    before: function() {},\n    success: function() {},\n    after: function() {},\n    error: function() {}\n  });\n  instafeed.run();\n}\n","/* ========================================================================\n * Bootstrap: transition.js v3.3.2\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap')\n\n    var transEndEventNames = {\n      WebkitTransition : 'webkitTransitionEnd',\n      MozTransition    : 'transitionend',\n      OTransition      : 'oTransitionEnd otransitionend',\n      transition       : 'transitionend'\n    }\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return { end: transEndEventNames[name] }\n      }\n    }\n\n    return false // explicit for ie8 (  ._.)\n  }\n\n  // http://blog.alexmaccaw.com/css-transitions\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false\n    var $el = this\n    $(this).one('bsTransitionEnd', function () { called = true })\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n    setTimeout(callback, duration)\n    return this\n  }\n\n  $(function () {\n    $.support.transition = transitionEnd()\n\n    if (!$.support.transition) return\n\n    $.event.special.bsTransitionEnd = {\n      bindType: $.support.transition.end,\n      delegateType: $.support.transition.end,\n      handle: function (e) {\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n      }\n    }\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: collapse.js v3.3.2\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = function (element, options) {\n    this.$element      = $(element)\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)\n    this.$trigger      = $(this.options.trigger).filter('[href=\"#' + element.id + '\"], [data-target=\"#' + element.id + '\"]')\n    this.transitioning = null\n\n    if (this.options.parent) {\n      this.$parent = this.getParent()\n    } else {\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n    }\n\n    if (this.options.toggle) this.toggle()\n  }\n\n  Collapse.VERSION  = '3.3.2'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true,\n    trigger: '[data-toggle=\"collapse\"]'\n  }\n\n  Collapse.prototype.dimension = function () {\n    var hasWidth = this.$element.hasClass('width')\n    return hasWidth ? 'width' : 'height'\n  }\n\n  Collapse.prototype.show = function () {\n    if (this.transitioning || this.$element.hasClass('in')) return\n\n    var activesData\n    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n    if (actives && actives.length) {\n      activesData = actives.data('bs.collapse')\n      if (activesData && activesData.transitioning) return\n    }\n\n    var startEvent = $.Event('show.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    if (actives && actives.length) {\n      Plugin.call(actives, 'hide')\n      activesData || actives.data('bs.collapse', null)\n    }\n\n    var dimension = this.dimension()\n\n    this.$element\n      .removeClass('collapse')\n      .addClass('collapsing')[dimension](0)\n      .attr('aria-expanded', true)\n\n    this.$trigger\n      .removeClass('collapsed')\n      .attr('aria-expanded', true)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse in')[dimension]('')\n      this.transitioning = 0\n      this.$element\n        .trigger('shown.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n\n    this.$element\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n  }\n\n  Collapse.prototype.hide = function () {\n    if (this.transitioning || !this.$element.hasClass('in')) return\n\n    var startEvent = $.Event('hide.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    var dimension = this.dimension()\n\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n    this.$element\n      .addClass('collapsing')\n      .removeClass('collapse in')\n      .attr('aria-expanded', false)\n\n    this.$trigger\n      .addClass('collapsed')\n      .attr('aria-expanded', false)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.transitioning = 0\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse')\n        .trigger('hidden.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    this.$element\n      [dimension](0)\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n  }\n\n  Collapse.prototype.toggle = function () {\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()\n  }\n\n  Collapse.prototype.getParent = function () {\n    return $(this.options.parent)\n      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n      .each($.proxy(function (i, element) {\n        var $element = $(element)\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n      }, this))\n      .end()\n  }\n\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n    var isOpen = $element.hasClass('in')\n\n    $element.attr('aria-expanded', isOpen)\n    $trigger\n      .toggleClass('collapsed', !isOpen)\n      .attr('aria-expanded', isOpen)\n  }\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && option == 'show') options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin\n  $.fn.collapse.Constructor = Collapse\n\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n\n\n  // COLLAPSE DATA-API\n  // =================\n\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n    var $this   = $(this)\n\n    if (!$this.attr('data-target')) e.preventDefault()\n\n    var $target = getTargetFromTrigger($this)\n    var data    = $target.data('bs.collapse')\n    var option  = data ? 'toggle' : $.extend({}, $this.data(), { trigger: this })\n\n    Plugin.call($target, option)\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: tooltip.js v3.3.2\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       =\n    this.options    =\n    this.enabled    =\n    this.timeout    =\n    this.hoverState =\n    this.$element   = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.3.2'\n\n  Tooltip.TRANSITION_DURATION = 150\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $(this.options.viewport.selector || this.options.viewport)\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (self && self.$tip && self.$tip.is(':visible')) {\n      self.hoverState = 'in'\n      return\n    }\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var $container   = this.options.container ? $(this.options.container) : this.$element.parent()\n        var containerDim = this.getPosition($container)\n\n        placement = placement == 'bottom' && pos.bottom + actualHeight > containerDim.bottom ? 'top'    :\n                    placement == 'top'    && pos.top    - actualHeight < containerDim.top    ? 'bottom' :\n                    placement == 'right'  && pos.right  + actualWidth  > containerDim.width  ? 'left'   :\n                    placement == 'left'   && pos.left   - actualWidth  < containerDim.left   ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        var prevHoverState = that.hoverState\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n\n        if (prevHoverState == 'out') that.leave(that)\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  = offset.top  + marginTop\n    offset.left = offset.left + marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var isVertical          = /top|bottom/.test(placement)\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isHorizontal) {\n    this.arrow()\n      .css(isHorizontal ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n      .css(isHorizontal ? 'top' : 'left', '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this\n    var $tip = this.tip()\n    var e    = $.Event('hide.bs.' + this.type)\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      that.$element\n        .removeAttr('aria-describedby')\n        .trigger('hidden.bs.' + that.type)\n      callback && callback()\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && this.$tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof ($e.attr('data-original-title')) != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n\n    var elRect    = el.getBoundingClientRect()\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n    }\n    var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.width) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    return (this.$tip = this.$tip || $(this.options.template))\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n  }\n\n  Tooltip.prototype.destroy = function () {\n    var that = this\n    clearTimeout(this.timeout)\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n    })\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.tooltip')\n      var options = typeof option == 'object' && option\n\n      if (!data && option == 'destroy') return\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n","// Generated by CoffeeScript 1.3.3\n(function() {\n  var Instafeed, root;\n\n  Instafeed = (function() {\n\n    function Instafeed(params, context) {\n      var option, value;\n      this.options = {\n        target: 'instafeed',\n        get: 'popular',\n        resolution: 'thumbnail',\n        sortBy: 'none',\n        links: true,\n        mock: false,\n        useHttp: false\n      };\n      if (typeof params === 'object') {\n        for (option in params) {\n          value = params[option];\n          this.options[option] = value;\n        }\n      }\n      this.context = context != null ? context : this;\n      this.unique = this._genKey();\n    }\n\n    Instafeed.prototype.hasNext = function() {\n      return typeof this.context.nextUrl === 'string' && this.context.nextUrl.length > 0;\n    };\n\n    Instafeed.prototype.next = function() {\n      if (!this.hasNext()) {\n        return false;\n      }\n      return this.run(this.context.nextUrl);\n    };\n\n    Instafeed.prototype.run = function(url) {\n      var header, instanceName, script;\n      if (typeof this.options.clientId !== 'string') {\n        if (typeof this.options.accessToken !== 'string') {\n          throw new Error(\"Missing clientId or accessToken.\");\n        }\n      }\n      if (typeof this.options.accessToken !== 'string') {\n        if (typeof this.options.clientId !== 'string') {\n          throw new Error(\"Missing clientId or accessToken.\");\n        }\n      }\n      if ((this.options.before != null) && typeof this.options.before === 'function') {\n        this.options.before.call(this);\n      }\n      if (typeof document !== \"undefined\" && document !== null) {\n        script = document.createElement('script');\n        script.id = 'instafeed-fetcher';\n        script.src = url || this._buildUrl();\n        header = document.getElementsByTagName('head');\n        header[0].appendChild(script);\n        instanceName = \"instafeedCache\" + this.unique;\n        window[instanceName] = new Instafeed(this.options, this);\n        window[instanceName].unique = this.unique;\n      }\n      return true;\n    };\n\n    Instafeed.prototype.parse = function(response) {\n      var anchor, fragment, header, htmlString, image, imageString, imageUrl, images, img, imgUrl, instanceName, node, reverse, sortSettings, tmpEl, _i, _j, _k, _len, _len1, _len2, _ref;\n      if (typeof response !== 'object') {\n        if ((this.options.error != null) && typeof this.options.error === 'function') {\n          this.options.error.call(this, 'Invalid JSON data');\n          return false;\n        } else {\n          throw new Error('Invalid JSON response');\n        }\n      }\n      if (response.meta.code !== 200) {\n        if ((this.options.error != null) && typeof this.options.error === 'function') {\n          this.options.error.call(this, response.meta.error_message);\n          return false;\n        } else {\n          throw new Error(\"Error from Instagram: \" + response.meta.error_message);\n        }\n      }\n      if (response.data.length === 0) {\n        if ((this.options.error != null) && typeof this.options.error === 'function') {\n          this.options.error.call(this, 'No images were returned from Instagram');\n          return false;\n        } else {\n          throw new Error('No images were returned from Instagram');\n        }\n      }\n      if ((this.options.success != null) && typeof this.options.success === 'function') {\n        this.options.success.call(this, response);\n      }\n      this.context.nextUrl = '';\n      if (response.pagination != null) {\n        this.context.nextUrl = response.pagination.next_url;\n      }\n      if (this.options.sortBy !== 'none') {\n        if (this.options.sortBy === 'random') {\n          sortSettings = ['', 'random'];\n        } else {\n          sortSettings = this.options.sortBy.split('-');\n        }\n        reverse = sortSettings[0] === 'least' ? true : false;\n        switch (sortSettings[1]) {\n          case 'random':\n            response.data.sort(function() {\n              return 0.5 - Math.random();\n            });\n            break;\n          case 'recent':\n            response.data = this._sortBy(response.data, 'created_time', reverse);\n            break;\n          case 'liked':\n            response.data = this._sortBy(response.data, 'likes.count', reverse);\n            break;\n          case 'commented':\n            response.data = this._sortBy(response.data, 'comments.count', reverse);\n            break;\n          default:\n            throw new Error(\"Invalid option for sortBy: '\" + this.options.sortBy + \"'.\");\n        }\n      }\n      if ((typeof document !== \"undefined\" && document !== null) && this.options.mock === false) {\n        images = response.data;\n        if (this.options.limit != null) {\n          if (images.length > this.options.limit) {\n            images = images.slice(0, this.options.limit + 1 || 9e9);\n          }\n        }\n        fragment = document.createDocumentFragment();\n        if ((this.options.filter != null) && typeof this.options.filter === 'function') {\n          images = this._filter(images, this.options.filter);\n        }\n        if ((this.options.template != null) && typeof this.options.template === 'string') {\n          htmlString = '';\n          imageString = '';\n          imgUrl = '';\n          tmpEl = document.createElement('div');\n          for (_i = 0, _len = images.length; _i < _len; _i++) {\n            image = images[_i];\n            imageUrl = image.images[this.options.resolution].url;\n            if (!this.options.useHttp) {\n              imageUrl = imageUrl.replace('http://', '//');\n            }\n            imageString = this._makeTemplate(this.options.template, {\n              model: image,\n              id: image.id,\n              link: image.link,\n              image: imageUrl,\n              caption: this._getObjectProperty(image, 'caption.text'),\n              likes: image.likes.count,\n              comments: image.comments.count,\n              location: this._getObjectProperty(image, 'location.name')\n            });\n            htmlString += imageString;\n          }\n          tmpEl.innerHTML = htmlString;\n          _ref = [].slice.call(tmpEl.childNodes);\n          for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\n            node = _ref[_j];\n            fragment.appendChild(node);\n          }\n        } else {\n          for (_k = 0, _len2 = images.length; _k < _len2; _k++) {\n            image = images[_k];\n            img = document.createElement('img');\n            imageUrl = image.images[this.options.resolution].url;\n            if (!this.options.useHttp) {\n              imageUrl = imageUrl.replace('http://', '//');\n            }\n            img.src = imageUrl;\n            if (this.options.links === true) {\n              anchor = document.createElement('a');\n              anchor.href = image.link;\n              anchor.appendChild(img);\n              fragment.appendChild(anchor);\n            } else {\n              fragment.appendChild(img);\n            }\n          }\n        }\n        document.getElementById(this.options.target).appendChild(fragment);\n        header = document.getElementsByTagName('head')[0];\n        header.removeChild(document.getElementById('instafeed-fetcher'));\n        instanceName = \"instafeedCache\" + this.unique;\n        window[instanceName] = void 0;\n        try {\n          delete window[instanceName];\n        } catch (e) {\n\n        }\n      }\n      if ((this.options.after != null) && typeof this.options.after === 'function') {\n        this.options.after.call(this);\n      }\n      return true;\n    };\n\n    Instafeed.prototype._buildUrl = function() {\n      var base, endpoint, final;\n      base = \"https://api.instagram.com/v1\";\n      switch (this.options.get) {\n        case \"popular\":\n          endpoint = \"media/popular\";\n          break;\n        case \"tagged\":\n          if (typeof this.options.tagName !== 'string') {\n            throw new Error(\"No tag name specified. Use the 'tagName' option.\");\n          }\n          endpoint = \"tags/\" + this.options.tagName + \"/media/recent\";\n          break;\n        case \"location\":\n          if (typeof this.options.locationId !== 'number') {\n            throw new Error(\"No location specified. Use the 'locationId' option.\");\n          }\n          endpoint = \"locations/\" + this.options.locationId + \"/media/recent\";\n          break;\n        case \"user\":\n          if (typeof this.options.userId !== 'number') {\n            throw new Error(\"No user specified. Use the 'userId' option.\");\n          }\n          if (typeof this.options.accessToken !== 'string') {\n            throw new Error(\"No access token. Use the 'accessToken' option.\");\n          }\n          endpoint = \"users/\" + this.options.userId + \"/media/recent\";\n          break;\n        default:\n          throw new Error(\"Invalid option for get: '\" + this.options.get + \"'.\");\n      }\n      final = \"\" + base + \"/\" + endpoint;\n      if (this.options.accessToken != null) {\n        final += \"?access_token=\" + this.options.accessToken;\n      } else {\n        final += \"?client_id=\" + this.options.clientId;\n      }\n      if (this.options.limit != null) {\n        final += \"&count=\" + this.options.limit;\n      }\n      final += \"&callback=instafeedCache\" + this.unique + \".parse\";\n      return final;\n    };\n\n    Instafeed.prototype._genKey = function() {\n      var S4;\n      S4 = function() {\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n      };\n      return \"\" + (S4()) + (S4()) + (S4()) + (S4());\n    };\n\n    Instafeed.prototype._makeTemplate = function(template, data) {\n      var output, pattern, varName, varValue, _ref;\n      pattern = /(?:\\{{2})([\\w\\[\\]\\.]+)(?:\\}{2})/;\n      output = template;\n      while (pattern.test(output)) {\n        varName = output.match(pattern)[1];\n        varValue = (_ref = this._getObjectProperty(data, varName)) != null ? _ref : '';\n        output = output.replace(pattern, \"\" + varValue);\n      }\n      return output;\n    };\n\n    Instafeed.prototype._getObjectProperty = function(object, property) {\n      var piece, pieces;\n      property = property.replace(/\\[(\\w+)\\]/g, '.$1');\n      pieces = property.split('.');\n      while (pieces.length) {\n        piece = pieces.shift();\n        if ((object != null) && piece in object) {\n          object = object[piece];\n        } else {\n          return null;\n        }\n      }\n      return object;\n    };\n\n    Instafeed.prototype._sortBy = function(data, property, reverse) {\n      var sorter;\n      sorter = function(a, b) {\n        var valueA, valueB;\n        valueA = this._getObjectProperty(a, property);\n        valueB = this._getObjectProperty(b, property);\n        if (reverse) {\n          if (valueA > valueB) {\n            return 1;\n          } else {\n            return -1;\n          }\n        }\n        if (valueA < valueB) {\n          return 1;\n        } else {\n          return -1;\n        }\n      };\n      data.sort(sorter.bind(this));\n      return data;\n    };\n\n    Instafeed.prototype._filter = function(images, filter) {\n      var filteredImages, image, _fn, _i, _len;\n      filteredImages = [];\n      _fn = function(image) {\n        if (filter(image)) {\n          return filteredImages.push(image);\n        }\n      };\n      for (_i = 0, _len = images.length; _i < _len; _i++) {\n        image = images[_i];\n        _fn(image);\n      }\n      return filteredImages;\n    };\n\n    return Instafeed;\n\n  })();\n\n  root = typeof exports !== \"undefined\" && exports !== null ? exports : window;\n\n  root.Instafeed = Instafeed;\n\n}).call(this);\n","/* ========================================================================\n * DOM-based Routing\n * Based on http://goo.gl/EUTi53 by Paul Irish\n *\n * Only fires on body classes that match. If a body class contains a dash,\n * replace the dash with an underscore when adding it to the object below.\n *\n * .noConflict()\n * The routing is enclosed within an anonymous function so that you can\n * always reference jQuery with $, even when in .noConflict() mode.\n *\n * Google CDN, Latest jQuery\n * To use the default WordPress version of jQuery, go to lib/config.php and\n * remove or comment out: add_theme_support('jquery-cdn');\n * ======================================================================== */\n\n(function($) {\n\n  // Use this variable to set up the common and page specific functions. If you\n  // rename this variable, you will also need to rename the namespace below.\n  var Sage = {\n    // All pages\n    'common': {\n      init: function() { // JavaScript to be fired on all pages\n\n        // Find and initialize Instafeed canvases\n        $('.instafeed-canvas').each(function(i) {\n          initializeInstafeed($(this));\n        });\n      },\n      finalize: function() { // JavaScript to be fired on all pages, after page specific JS is fired\n      }\n    },\n    // Home page\n    'home': {\n      init: function() { // JavaScript to be fired on the home page\n      },\n      finalize: function() { // JavaScript to be fired on the home page, after the init JS\n      }\n    },\n    // About us page, note the change from about-us to about_us.\n    'bord': {\n      init: function() { // JavaScript to be fired on the 'bord' page\n      }\n    }\n  };\n\n  // The routing fires all common scripts, followed by the page specific scripts.\n  // Add additional events for more control over timing e.g. a finalize event\n  var UTIL = {\n    fire: function(func, funcname, args) {\n      var fire;\n      var namespace = Sage;\n      funcname = (funcname === undefined) ? 'init' : funcname;\n      fire = func !== '';\n      fire = fire && namespace[func];\n      fire = fire && typeof namespace[func][funcname] === 'function';\n\n      if (fire) {\n        namespace[func][funcname](args);\n      }\n    },\n    loadEvents: function() {\n      // Fire common init JS\n      UTIL.fire('common');\n\n      // Fire page-specific init JS, and then finalize JS\n      $.each(document.body.className.replace(/-/g, '_').split(/\\s+/), function(i, classnm) {\n        UTIL.fire(classnm);\n        UTIL.fire(classnm, 'finalize');\n      });\n\n      // Fire common finalize JS\n      UTIL.fire('common', 'finalize');\n    }\n  };\n\n  // Load Events\n  $(document).ready(UTIL.loadEvents);\n\n})(jQuery); // Fully reference jQuery after this point.\n","/**\n * (╯°□°）╯︵ ┻━┻\n *\n * @library tableflip\n * @description A (physical) table configurator jQuery plugin\n * @author Fredrik Broman <frebro@gmail.com>\n * @license ISC\n */\n\n;(function(window, document, $, undefined) {\n\n  'use strict';\n\n  /**\n   * Plugin NAMESPACE\n   * @type {String}\n   * @api private\n   */\n  var NAMESPACE = 'tableflip';\n\n  /**\n   * Plugin constructor\n   * @param {Node} element\n   * @param {Object} [options]\n   * @api public\n   */\n  function Plugin (element, options) {\n    this.options = $.extend(true, $.fn[NAMESPACE].defaults, options);\n    this.$element = $(element);\n\n    this.$modelsContainer = $('.tableflip__models', this.$element);\n    this.$modelsSlides = $('.tableflip__slides', this.$modelsContainer);\n    this.$modelsNextControl = $('.tableflip__control--next', this.$modelsContainer);\n    this.$modelsPrevControl = $('.tableflip__control--prev', this.$modelsContainer);\n    this.$modelLabel = $('.tableflip__label--model', this.$modelsContainer);\n\n    this.$widthControl = $('.tableflip__control--width', this.$element);\n    this.$widthLabel = $('.tableflip__label--width', this.$element);\n    this.$lengthControl = $('.tableflip__control--length', this.$element);\n    this.$lengthLabel = $('.tableflip__label--length', this.$element);\n\n    this.$materialsContainer = $('.tableflip__materials', this.$element);\n    this.$finishesContainer = $('.tableflip__finishes', this.$element);\n    this.$customerContainer = $('.tableflip__customer', this.$element);\n    this.$thankyouContainer = $('.tableflip__thankyou', this.$element);\n\n    this.$orderControl = $('.tableflip__control--order', this.$element);\n\n    // Fetch models from data-attribute\n    $.each($('.tableflip__model', this.$modelsContainer), $.proxy(function(index, el) {\n      var model = $(el).data('tableflip-model');\n      model.base_price = parseInt(model.base_price, 10);\n      model.max_length = parseInt(model.max_length, 10);\n      model.max_width = parseInt(model.max_width, 10);\n      model.min_length = parseInt(model.min_length, 10);\n      model.min_width = parseInt(model.min_width, 10);\n      model.sqm_price = parseInt(model.sqm_price, 10);\n      model.$element = el;\n      this.options.models.push(model);\n    }, this));\n\n    // Fetch materials from data-attribute\n    $.each($('.tableflip__material', this.$materialsContainer), $.proxy(function(index, el) {\n      var material = $(el).data('tableflip-material');\n      material.price_modifier = parseFloat(material.price_modifier, 10);\n      material.$element = el;\n      this.options.materials.push(material);\n    }, this));\n\n    // Fetch finishes from data-attribute\n    $.each($('.tableflip__finish', this.$finishesContainer), $.proxy(function(index, el) {\n      var finish = $(el).data('tableflip-finish');\n      finish.price_modifier = parseFloat(finish.price_modifier, 10);\n      finish.$element = el;\n      this.options.finishes.push(finish);\n    }, this));\n  }\n\n  /**\n   * Plugin prototype\n   * @type {Object}\n   * @api public\n   */\n  Plugin.prototype = {\n    constructor: Plugin,\n    version: '0.1.0',\n\n    /**\n     * Init method\n     * @api public\n     */\n    init: function () {\n      console.log('(╯°□°）╯︵ ┻━┻');\n\n      // Hide order containers\n      this.$customerContainer.hide();\n      this.$thankyouContainer.hide();\n\n      // Setup order\n      this.setModel(0);\n      this.setWidth(800);\n      this.setLength(1850);\n      this.setMaterial(1);\n      this.setFinish(4, true);\n\n      // Setup controls\n      this.$modelsNextControl.on('click', $.proxy(function(event) {\n        event.preventDefault();\n        this.setModel('next', true);\n      }, this));\n\n      this.$modelsPrevControl.on('click', $.proxy(function(event) {\n        event.preventDefault();\n        this.setModel('prev', true);\n      }, this));\n\n      this.$orderControl.on('click', $.proxy(function(event) {\n        event.preventDefault();\n        this.sendOrder();\n      }, this));\n\n      this.$widthControl.on('input', $.proxy(function(event) {\n        event.preventDefault();\n        this.setWidth(event.currentTarget.value, true);\n      }, this));\n\n      this.$lengthControl.on('input', $.proxy(function(event) {\n        event.preventDefault();\n        this.setLength(event.currentTarget.value, true);\n      }, this));\n\n      $('.tableflip__material', this.$materialsContainer).on('click', $.proxy(function(event){\n        this.setMaterial($('.tableflip__material', this.$materialsContainer).index(event.currentTarget), true);\n      }, this));\n\n      $('.tableflip__finish', this.$finishesContainer).on('click', $.proxy(function(event){\n        this.setFinish($('.tableflip__finish', this.$finishesContainer).index(event.currentTarget), true);\n      }, this));\n    },\n\n    /**\n     * setModel method\n     * @param {Integer|String} [index]\n     * @param {Boolean} [refresh]\n     * @api public\n     */\n    setModel: function(index, refresh) {\n\n      // If index is a string, evaluate as keyword\n      if ( typeof index === \"string\" ) {\n        var keyword = index;\n        index = this.options.models.indexOf(this.options.order.model);\n\n        switch (keyword) {\n          case 'next':\n            if ( index >= this.options.models.length - 1 ) { index = 0; }\n            else { index += 1; }\n            break;\n          case 'prev':\n            if ( index <= 0 ) { index = this.options.models.length - 1; }\n            else { index -= 1; }\n            break;\n        }\n      }\n\n      this.options.order.model = this.options.models[index];\n\n      // Update dimensions to fit the new model's max/min\n      this.setWidth(this.options.order.width);\n      this.setLength(this.options.order.length);\n\n      if (refresh) {\n        this.refresh();\n      }\n    },\n\n    /**\n     * getModel method\n     * @return {Object}\n     * @api public\n     */\n    getModel: function() {\n      return this.options.order.model;\n    },\n\n    /**\n     * setMaterial method\n     * @param {Integer} [index]\n     * @param {Boolean} [refresh]\n     * @api public\n     */\n    setMaterial: function(index, refresh) {\n      this.options.order.material = this.options.materials[index];\n\n      if (refresh) {\n        this.refresh();\n      }\n    },\n\n    /**\n     * getMaterial method\n     * @return {Object}\n     * @api public\n     */\n    getMaterial: function() {\n      return this.options.order.material;\n    },\n\n    /**\n     * verifyMaterialAvailability method\n     * @api public\n     */\n    verifyMaterialAvailability: function() {\n      if ( this.options.order.material.disable_for_model === this.options.order.model.name ) {\n        this.setMaterial(0, true);\n      }\n    },\n\n    /**\n     * setFinish method\n     * @param {Integer} [index]\n     * @param {Boolean} [refresh]\n     * @api public\n     */\n    setFinish: function(index, refresh) {\n      this.options.order.finish = this.options.finishes[index];\n\n      if (refresh) {\n        this.refresh();\n      }\n    },\n\n    /**\n     * getFinish method\n     * @return {Object}\n     * @api public\n     */\n    getFinish: function() {\n      return this.options.order.finish;\n    },\n\n    /**\n     * setWidth method\n     * @param {Integer} [width]\n     * @param {Boolean} [refresh]\n     * @api public\n     */\n    setWidth: function(width, refresh) {\n      width = (width > this.options.order.model.max_width) ? this.options.order.model.max_width : width;\n      width = (width < this.options.order.model.min_width) ? this.options.order.model.min_width : width;\n      this.options.order.width = width;\n\n      if (refresh) {\n        this.refresh();\n      }\n    },\n\n    /**\n     * getWidth method\n     * @return {Object}\n     * @api public\n     */\n    getWidth: function() {\n      return this.options.order.width;\n    },\n\n    /**\n     * setLength method\n     * @param {Integer} [length]\n     * @param {Boolean} [refresh]\n     * @api public\n     */\n    setLength: function(length, refresh) {\n      length = (length > this.options.order.model.max_length) ? this.options.order.model.max_length : length;\n      length = (length < this.options.order.model.min_length) ? this.options.order.model.min_length : length;\n      this.options.order.length = length;\n\n      if (refresh) {\n        this.refresh();\n      }\n    },\n\n    /**\n     * getLength method\n     * @return {Integer}\n     * @api public\n     */\n    getLength: function() {\n      return this.options.order.length;\n    },\n\n    /**\n     * setPrice method\n     * @param {Boolean} [refresh]\n     * @api public\n     */\n    setPrice: function(refresh) {\n      var model = this.options.order.model;\n      var material = this.options.order.material;\n      var finish = this.options.order.finish;\n\n      // Calculate exact price\n      var price = model.base_price + (this.getSqm() * model.sqm_price * material.price_modifier * finish.price_modifier);\n\n      // Round up to nearest 100\n      var roundPrice = Math.ceil(price / 100) * 100;\n\n      // Save price to order\n      this.options.order.price = roundPrice;\n\n      if (refresh) {\n        this.refresh();\n      }\n    },\n\n    /**\n     * getPrice method\n     * @return {Integer}\n     * @api public\n     */\n    getPrice: function() {\n      this.setPrice();\n      return this.options.order.price;\n    },\n\n    /**\n     * getPriceString method\n     * @return {String}\n     * @api public\n     */\n    getPriceString: function() {\n\n      if (0 < this.getPrice()) {\n\n        // Insert space every third character from the last\n        var priceArray = this.getPrice().toString().split('').reverse();\n        $.each(priceArray, function(i, str) {\n          if (i !== 0 && i % 3 === 0) {\n            priceArray[i] = str + '&thinsp;';\n          }\n        });\n\n        // Return price and currency as a string\n        return 'Beställ nu för ' + priceArray.reverse().join('') + '&thinsp;<abbr>' + this.options.order.currency + '</abbr>';\n      }\n      else {\n        return 'Skicka en offertförfrågan';\n      }\n    },\n\n    /**\n     * getSqm method\n     * @return {Integer}\n     * @api public\n     */\n    getSqm: function() {\n      return this.getLength() * this.getWidth() / 1000000;\n    },\n\n    /**\n     * refresh method\n     * @api public\n     */\n    refresh: function() {\n\n      // Verify that current material is available for current model\n      if ( this.options.order.material ) {\n        this.verifyMaterialAvailability();\n      }\n\n      // Slide model image into view\n      var position = $(this.options.order.model.$element).position();\n      this.$modelsSlides.css('left', (position.left * -1));\n\n      // Set slides height to match current model's image\n      this.$modelsSlides.css('height', $(this.options.order.model.$element).outerHeight());\n\n      // Disable materials that are unavailable for the current model\n      $.each(this.options.materials, $.proxy(function(i, e) {\n        $(e.$element).removeClass('disabled');\n        if (e.disable_for_model === this.options.order.model.name) {\n          $(e.$element).addClass('disabled');\n        }\n      }, this));\n      this.verifyMaterialAvailability();\n\n      // Set selected elements\n      $('.tableflip__material', this.$materialsContainer).removeClass('selected');\n      $('.tableflip__finish', this.$finishesContainer).removeClass('selected');\n      $(this.options.order.material.$element).addClass('selected');\n      $(this.options.order.finish.$element).addClass('selected');\n\n      // Update controls\n      this.$widthControl.attr('min', this.options.order.model.min_width).attr('max', this.options.order.model.max_width).attr('value', this.options.order.width);\n      this.$lengthControl.attr('min', this.options.order.model.min_length).attr('max', this.options.order.model.max_length).attr('value', this.options.order.length);\n\n      // Update labels\n      this.$modelLabel.html(this.options.order.model.name);\n      this.$widthLabel.html((this.options.order.width / 10) + \" cm\");\n      this.$lengthLabel.html((this.options.order.length / 10) + \" cm\");\n      this.$orderControl.html(this.getPriceString());\n    },\n\n    getOrderJSON: function() {\n      var order = this.options.order;\n      delete order.model.$element;\n      delete order.material.$element;\n      delete order.finish.$element;\n      return JSON.stringify(order, null, '\\t');\n    },\n\n    sendOrder: function() {\n\n      // Dirty validation\n      var customerJSON = '';\n      var customerName = $('#tableflip__control__customer-name').val();\n      var customerEmail = $('#tableflip__control__customer-email').val();\n      var customerPhone = $('#tableflip__control__customer-phone').val();\n\n      if (customerName && customerEmail && customerPhone) {\n\n        // Create customer JSON\n        customerJSON = JSON.stringify({\n          name: customerName,\n          email: customerEmail,\n          phone: customerPhone\n        }, null, '\\t');\n      } else {\n\n        // Show customer container if not already visible\n        this.$customerContainer.show('fast');\n      }\n\n      if (customerJSON !== '') {\n\n        // Compose order message\n        var orderMessage = this.getOrderJSON()+'\\n\\n'+customerJSON+'\\n\\n';\n\n        $.getJSON('https://mandrillapp.com/api/1.0/messages/send.json', {\n          \"key\": \"Dc-Fq14eZF279Fst3umiOQ\",\n          \"message\" : {\n            \"subject\": \"Order from jerkerinredning.se\",\n            \"from_email\": \"post@jerker.eu\",\n            \"from_name\": \"Jerker Inredning & Form\",\n            \"to\": [\n              {\n                \"email\": \"post@jerker.eu\",\n                \"name\": \"Jerker Inredning & Form\",\n                \"type\": \"to\"\n              }\n            ],\n            \"text\": orderMessage,\n          }\n        }, $.proxy(function(json, textStatus) {\n          this.$thankyouContainer.show('fast');\n          this.$customerContainer.hide('fast');\n          this.$orderControl.hide();\n        }, this));\n      }\n    }\n\n  };\n\n  /**\n   * jQuery plugin definition\n   * @param  {String} [method]\n   * @param  {Object} [options]\n   * @return {Object}\n   * @api public\n   */\n  $.fn[NAMESPACE] = function (method, options) {\n    return this.each(function () {\n      var $this = $(this),\n      data = $this.data(NAMESPACE);\n      options = (typeof method === 'object') ? method : options;\n      if (!data) {\n        $this.data(NAMESPACE, (data = new Plugin(this, options)));\n      }\n      data[(typeof method === 'string') ? method : 'init']();\n    });\n  };\n\n  /**\n   * jQuery plugin defaults\n   * @type {Object}\n   * @api public\n   */\n  $.fn[NAMESPACE].defaults = {\n    models: [],\n    materials: [],\n    finishes: [],\n    order: {\n      model: null,\n      material: null,\n      finish: null,\n      width: 0,\n      length: 0,\n      price: 0,\n      currency: 'SEK'\n    }\n  };\n\n  /**\n   * jQuery plugin data api\n   * @api public\n   */\n  $(window).on('load', function (event) {\n    $('.' + NAMESPACE).each(function () {\n      $(this)[NAMESPACE]();\n    });\n  });\n\n}(this, this.document, this.jQuery));\n"],"sourceRoot":"/source/"}